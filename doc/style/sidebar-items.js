initSidebarItems({"fn":[["arc_ptr_eq","Returns whether the two arguments point to the same value."],["serialize_comma_separated_list","Serializes as CSS a comma-separated list of any `T` that supports being serialized as CSS."]],"macro":[["atom",""],["css_properties_accessors",""],["ns",""],["property_name",""]],"mod":[["animation","CSS transitions and animations."],["attr","Parsed representations of [DOM attributes][attr]."],["bezier","Parametric BÃ©zier curves."],["bloom","The style bloom filter is used as an optimization when matching deep descendant selectors."],["cache","A simple LRU cache."],["cascade_info","A structure to collect information about the cascade."],["computed_values","Types for [computed values][computed]."],["context","The context within which style is calculated."],["custom_properties","Support for [custom properties for cascading variables][custom]."],["data","Per-node data used in style calculation."],["dom","Types and traits used to access the DOM from style calculation."],["element_state","States elements can be in."],["error_reporting","Types used to report parsing errors."],["font_face","The [`@font-face`][ff] at-rule."],["font_metrics","Access to font metrics from the style system."],["gecko","Gecko-specific style-system bits."],["gecko_bindings","Gecko's C++ bindings, along with some rust helpers to ease its use."],["gecko_properties",""],["gecko_string_cache","A drop-in replacement for string_cache, but backed by Gecko `nsIAtom`s."],["keyframes","Keyframes: https://drafts.csswg.org/css-animations/#keyframes"],["logical_geometry","Geometry in flow-relative space."],["matching","High-level interface to CSS selector matching."],["media_queries","[Media queries][mq]."],["owning_handle","A handle that encapsulate a reference to a given data along with its owner."],["parallel","Implements parallel traversal over the DOM tree."],["parser","The context within which CSS code is parsed."],["properties","The CSS properties supported by the style system. Generated from the properties.mako.rs template by build.rs"],["restyle_hints","Restyle hints: an optimization to avoid unnecessarily matching selectors."],["rule_tree","The rule tree."],["scoped_tls","Stack-scoped thread-local storage for rayon thread pools."],["selector_parser","The pseudo-classes and pseudo-elements supported by the style system."],["sequential","Implements sequential traversal over the DOM tree."],["sink","Small helpers to abstract over different containers."],["str","String utils for attributes and similar stuff."],["stylesheets","Style sheets and their CSS rules."],["stylist","Selector matching."],["supports","@supports rules"],["thread_state","Supports dynamic assertions in debug builds about what sort of thread is running and what state it's in."],["timer","A timer module, used to define a `Timer` type, that is controlled by script."],["traversal","Traversing the DOM tree; the bloom filter."],["values","Common [values][values] used in CSS."],["viewport","The [`@viewport`][at] at-rule and [`meta`][meta] element."]]});