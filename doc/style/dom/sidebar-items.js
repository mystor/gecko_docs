initSidebarItems({"struct":[["AnimationRules","The animation rules. The first one is for Animation cascade level, and the second one is for Transition cascade level."],["LayoutIterator","A node iterator that only returns node that don't need layout."],["OpaqueNode","An opaque handle to a node, which, unlike UnsafeNode, cannot be transformed back into a non-opaque representation. The only safe operation that can be performed on this node is to compare it to another opaque handle or to another OpaqueNode."],["SendElement","Same reason as for the existence of SendNode, SendElement does the proper things for a given `TElement`."],["SendNode","TNode and TElement aren't Send because we want to be careful and explicit about our parallel traversal. However, there are certain situations (including but not limited to the traversal) where we need to send DOM objects to other threads."],["ShowData","Wrapper to output the ElementData along with the node when formatting for Debug."],["ShowDataAndPrimaryValues","Wrapper to output the primary computed values along with the node when formatting for Debug. This is very verbose."],["ShowSubtree","Wrapper to output the subtree rather than the single node when formatting for Debug."],["ShowSubtreeData","Wrapper to output the subtree along with the ElementData when formatting for Debug."],["ShowSubtreeDataAndPrimaryValues","Wrapper to output the subtree along with the ElementData and primary ComputedValues when formatting for Debug. This is extremely verbose."]],"trait":[["NodeInfo","Simple trait to provide basic information about the type of an element."],["PresentationalHintsSynthetizer","A trait used to synthesize presentational hints for HTML element attributes."],["TElement","The element trait, the main abstraction the style crate acts over."],["TNode","The `TNode` trait. This is the main generic trait over which the style system can be implemented."]],"type":[["UnsafeNode","Opaque type stored in type-unsafe work queues for parallel layout. Must be transmutable to and from `TNode`."]]});